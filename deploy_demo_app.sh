#!/bin/bash

# Define variables
CLUSTER_NAME="demo-cluster"
NAMESPACE="demo-app"

# Function to create a KinD cluster
create_kind_cluster() {
    echo "Creating KinD cluster: $CLUSTER_NAME"
    kind create cluster --name $CLUSTER_NAME
    echo "KinD cluster created."
}

# Function to deploy demo application
deploy_demo_app() {
    echo "Setting up namespace: $NAMESPACE"
    kubectl create namespace $NAMESPACE

    echo "Deploying demo application..."

    # Apply Kubernetes manifests for the demo application
    cat <<EOF | kubectl apply -n $NAMESPACE -f -
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  labels:
    app: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-app
      tier: frontend
  template:
    metadata:
      labels:
        app: demo-app
        tier: frontend
    spec:
      containers:
      - name: frontend
        image: nginx:latest
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  labels:
    app: demo-app
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30001
  selector:
    app: demo-app
    tier: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    app: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-app
      tier: backend
  template:
    metadata:
      labels:
        app: demo-app
        tier: backend
    spec:
      containers:
      - name: backend
        image: hashicorp/http-echo:latest
        args:
          - "-text=Hello from Backend"
        ports:
        - containerPort: 5678
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  labels:
    app: demo-app
spec:
  type: ClusterIP
  ports:
  - port: 5678
    targetPort: 5678
  selector:
    app: demo-app
    tier: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
  labels:
    app: demo-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: demo-app
      tier: database
  template:
    metadata:
      labels:
        app: demo-app
        tier: database
    spec:
      containers:
      - name: database
        image: postgres:latest
        env:
        - name: POSTGRES_USER
          value: demo
        - name: POSTGRES_PASSWORD
          value: demo
        - name: POSTGRES_DB
          value: demo_db
        ports:
        - containerPort: 5432
---
apiVersion: v1
kind: Service
metadata:
  name: database
  labels:
    app: demo-app
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    app: demo-app
    tier: database
EOF

    echo "Demo application deployed."
}

# Main script execution
if ! command -v kind &> /dev/null; then
    echo "KinD is not installed. Please install KinD and retry."
    exit 1
fi

if ! command -v kubectl &> /dev/null; then
    echo "kubectl is not installed. Please install kubectl and retry."
    exit 1
fi

create_kind_cluster
deploy_demo_app

# Display application status
echo "Fetching application status..."
kubectl get all -n $NAMESPACE

# Success message
echo "
=========================================
Demo application successfully deployed! üéâ
=========================================
Access the frontend at: http://localhost:30001
=========================================
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚°æ‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚°è‚†Ä‚°à‚¢ø‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚†Ä‚£∏‚°á‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°∂‚¢∂
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚°á‚¢∞‚°ø‚†Ä‚¢Ä‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°æ‚†â‚°Ä‚£æ
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚°ü‚¢†‚£ø‚†ø‚†Å‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚°æ‚†ã‚£†‚†û‚¢∑‚°è
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£¥‚°ü‚¢Å‚£æ‚£ø‚°≠‚†Ä‚£º‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚°¥‚†õ‚†Å‚£†‚£æ‚†ã‚†Ä‚£æ‚†É
‚†Ä‚†Ä‚†Ä‚¢Ä‚£æ‚†ü‚†Ä‚£º‚£ø‚£ø‚†É‚¢∞‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°æ‚†ã‚†Ä‚¢Ä‚£æ‚£ø‚†É‚¢Ä‚£æ‚†è‚†Ä
‚†Ä‚†Ä‚†Ä‚£º‚°ø‚†Ä‚¢∞‚£ø‚°ø‚†Å‚¢†‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚°ü‚†Å‚†Ä‚£¥‚£ø‚†ø‚¢Ä‚£¥‚£ø‚†ã‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚£ø‚†á‚†Ä‚£æ‚°ü‚†Å‚£∞‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚°ü‚†Ä‚†Ä‚£º‚£ø‚†â‚£¥‚£ø‚†ü‚†Å‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚£ø‚°Ä‚†Ä‚£ø‚°á‚¢∞‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†É‚†Ä‚£∏‚°ø‚¢Å‚£æ‚†ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚¢ª‚£á‚†Ä‚¢ø‚°á‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚¢†‚°ü‚¢†‚£ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†à‚£ø‚°Ä‚†∏‚°á‚£ø‚¢Ñ‚°Ä‚£Ä‚£Ä‚£Ä‚£Ä‚£∞‚£ø‚°Ñ‚£º‚¢Å‚£æ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£∑‚†Ä‚£∑‚¢ø‚†ø‚°ø‚°ü‚°ø‚¢ü‚†â‚¢â‚£ø‚£ø‚°ü‚¢∏‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°Ä‚†∏‚¢∏‚£∑‚£¥‚£§‚£§‚£æ‚£∂‚£à‚¢ô‚°ø‚†É‚°ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†ò‚†á‚°π‚†ü‚†ã‚†â‚†â‚†â‚†ª‚°Ä‚†∞‚£ß‚£Ñ‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£∏‚†á‚†Ä‚†Ä‚†Ä‚£†‚°∂‚†ü‚†õ‚†õ‚†õ‚†Ä‚†Ä‚†Ä‚£Ä‚£≠‚£ù‚£∑‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚¢â‚†î‚£ä‚£Å‚†Ç‚†Ä‚†Ä‚¢Ä‚°æ‚¢Ü‚†à‚¢π‚°ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚£∞‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°æ‚¢±‚°§‚¢π‚†Ä‚†Ä‚¢∏‚£ü‚£≤‚¢°‚°è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚£†‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢à‚†ë‚†í‚†í‚†ã‚†Ä‚†Ä‚†ò‚£Ø‚°é‚¢æ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚¢Ä‚£¥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚†õ‚†â‚¢Ä‚†Ä‚††‚†§‚†º‚¢∑‚£Ñ‚†π‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚¢†‚°æ‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°†‚†ñ‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†ª‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚£º‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚¢∞‚†É‚°æ‚¢ã‚†ë‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢∑‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä
‚£ø‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚°è‚†Ä‚†Ä‚¢π‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£Ñ‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ª‚°Ñ‚†Ä‚†Ä‚†Ä
‚¢π‚°á‚¢†‚†Ä‚†Ä‚†Ä‚†Å‚†Ä‚†Ä‚¢∏‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†í‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°á‚†Ä‚†Ä‚†Ä
‚†à‚¢ø‚°å‚¢∑‚£§‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚£ø‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢†‚°á‚†Ä‚†Ä‚†Ä
‚†Ä‚†ò‚¢∑‚£¶‚†ô‚†∑‚£Ñ‚†Ä‚†Ä‚†∏‚£è‚†ô‚£Æ‚°¢‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚†á‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†ô‚†∑‚†∂‚£¶‚£Ä‚£†‚†Ä‚¢π‚°∑‚¢å‚°ª‚£¶‚£Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢§‚£∂‚†ü‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†ô‚†ø‚£ß‚°Ä‚†ª‚£é‚£Å‚°Ä‚¢â‚†ô‚†í‚†∂‚†∂‚†∂‚£≤‚°û‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢∑‚°Ñ‚¢à‚†ª‚¢∑‚£§‚£Ä‚£Å‚£Ä‚£õ‚°ª‚¢π‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£∑‚†Ä‚†Å‚†Ä‚†â‚£â‚£â‚£â‚£â‚°¥‚†è‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†õ‚†∑‚†¶‚£§‚£§‚†¥‚†ü‚†ã‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä
"